Terminals unused in grammar

   ELSE


State 42 conflicts: 1 shift/reduce


Grammar

    0 $accept: Prog $end

    1 Prog: Declarations StmtSeq

    2 Declarations: Dec Declarations
    3             | /* empty */

    4 $@1: /* empty */

    5 Dec: Int Ident $@1 ';'

    6 StmtSeq: Stmt StmtSeq
    7        | /* empty */

    8 Stmt: Write Expr ';'
    9     | Write '(' Expr ')' ';'
   10     | Id '=' Expr ';'
   11     | IF '(' BExpr ')' '{' StmtSeq '}'

   12 BExpr: BExpr bAND RExpr
   13      | BExpr bOR RExpr
   14      | RExpr

   15 RExpr: Expr '<' Expr
   16      | Expr LTEQ Expr
   17      | Expr EQ Expr
   18      | Expr GTEQ Expr
   19      | Expr '>' Expr

   20 Expr: Expr '-' Term
   21     | Expr '+' Term
   22     | Term

   23 Term: Term '%' Expo
   24     | Term '/' Expo
   25     | Term '*' Expo
   26     | Expo

   27 Expo: Expo '^' Factor
   28     | Factor

   29 Factor: '-' Factor
   30       | '(' Expr ')'
   31       | IntLit
   32       | Ident

   33 Id: Ident


Terminals, with rules where they appear

$end (0) 0
'%' (37) 23
'(' (40) 9 11 30
')' (41) 9 11 30
'*' (42) 25
'+' (43) 21
'-' (45) 20 29
'/' (47) 24
';' (59) 5 8 9 10
'<' (60) 15
'=' (61) 10
'>' (62) 19
'^' (94) 27
'{' (123) 11
'}' (125) 11
error (256)
Ident (258) 5 32 33
IntLit (259) 31
Int (260) 5
Write (261) 8 9
IF (262) 11
ELSE (263)
LTEQ (264) 16
EQ (265) 17
GTEQ (266) 18
bAND (267) 12
bOR (268) 13


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
Prog (29)
    on left: 1, on right: 0
Declarations (30)
    on left: 2 3, on right: 1 2
Dec (31)
    on left: 5, on right: 2
$@1 (32)
    on left: 4, on right: 5
StmtSeq (33)
    on left: 6 7, on right: 1 6 11
Stmt (34)
    on left: 8 9 10 11, on right: 6
BExpr (35)
    on left: 12 13 14, on right: 11 12 13
RExpr (36)
    on left: 15 16 17 18 19, on right: 12 13 14
Expr (37)
    on left: 20 21 22, on right: 8 9 10 15 16 17 18 19 20 21 30
Term (38)
    on left: 23 24 25 26, on right: 20 21 22 23 24 25
Expo (39)
    on left: 27 28, on right: 23 24 25 26 27
Factor (40)
    on left: 29 30 31 32, on right: 27 28 29
Id (41)
    on left: 33, on right: 10


state 0

    0 $accept: . Prog $end

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Prog          go to state 2
    Declarations  go to state 3
    Dec           go to state 4


state 1

    5 Dec: Int . Ident $@1 ';'

    Ident  shift, and go to state 5


state 2

    0 $accept: Prog . $end

    $end  shift, and go to state 6


state 3

    1 Prog: Declarations . StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 10
    Stmt     go to state 11
    Id       go to state 12


state 4

    2 Declarations: Dec . Declarations

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 13
    Dec           go to state 4


state 5

    5 Dec: Int Ident . $@1 ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 14


state 6

    0 $accept: Prog $end .

    $default  accept


state 7

   33 Id: Ident .

    $default  reduce using rule 33 (Id)


state 8

    8 Stmt: Write . Expr ';'
    9     | Write . '(' Expr ')' ';'

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 17
    '-'     shift, and go to state 18

    Expr    go to state 19
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 9

   11 Stmt: IF . '(' BExpr ')' '{' StmtSeq '}'

    '('  shift, and go to state 23


state 10

    1 Prog: Declarations StmtSeq .

    $default  reduce using rule 1 (Prog)


state 11

    6 StmtSeq: Stmt . StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 24
    Stmt     go to state 11
    Id       go to state 12


state 12

   10 Stmt: Id . '=' Expr ';'

    '='  shift, and go to state 25


state 13

    2 Declarations: Dec Declarations .

    $default  reduce using rule 2 (Declarations)


state 14

    5 Dec: Int Ident $@1 . ';'

    ';'  shift, and go to state 26


state 15

   32 Factor: Ident .

    $default  reduce using rule 32 (Factor)


state 16

   31 Factor: IntLit .

    $default  reduce using rule 31 (Factor)


state 17

    9 Stmt: Write '(' . Expr ')' ';'
   30 Factor: '(' . Expr ')'

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 28
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 18

   29 Factor: '-' . Factor

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Factor  go to state 29


state 19

    8 Stmt: Write Expr . ';'
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    ';'  shift, and go to state 30
    '-'  shift, and go to state 31
    '+'  shift, and go to state 32


state 20

   22 Expr: Term .
   23 Term: Term . '%' Expo
   24     | Term . '/' Expo
   25     | Term . '*' Expo

    '%'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35

    $default  reduce using rule 22 (Expr)


state 21

   26 Term: Expo .
   27 Expo: Expo . '^' Factor

    '^'  shift, and go to state 36

    $default  reduce using rule 26 (Term)


state 22

   28 Expo: Factor .

    $default  reduce using rule 28 (Expo)


state 23

   11 Stmt: IF '(' . BExpr ')' '{' StmtSeq '}'

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    BExpr   go to state 37
    RExpr   go to state 38
    Expr    go to state 39
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 24

    6 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 6 (StmtSeq)


state 25

   10 Stmt: Id '=' . Expr ';'

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 40
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 26

    5 Dec: Int Ident $@1 ';' .

    $default  reduce using rule 5 (Dec)


state 27

   30 Factor: '(' . Expr ')'

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 41
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 28

    9 Stmt: Write '(' Expr . ')' ';'
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term
   30 Factor: '(' Expr . ')'

    ')'  shift, and go to state 42
    '-'  shift, and go to state 31
    '+'  shift, and go to state 32


state 29

   29 Factor: '-' Factor .

    $default  reduce using rule 29 (Factor)


state 30

    8 Stmt: Write Expr ';' .

    $default  reduce using rule 8 (Stmt)


state 31

   20 Expr: Expr '-' . Term

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Term    go to state 43
    Expo    go to state 21
    Factor  go to state 22


state 32

   21 Expr: Expr '+' . Term

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Term    go to state 44
    Expo    go to state 21
    Factor  go to state 22


state 33

   23 Term: Term '%' . Expo

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expo    go to state 45
    Factor  go to state 22


state 34

   24 Term: Term '/' . Expo

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expo    go to state 46
    Factor  go to state 22


state 35

   25 Term: Term '*' . Expo

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expo    go to state 47
    Factor  go to state 22


state 36

   27 Expo: Expo '^' . Factor

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Factor  go to state 48


state 37

   11 Stmt: IF '(' BExpr . ')' '{' StmtSeq '}'
   12 BExpr: BExpr . bAND RExpr
   13      | BExpr . bOR RExpr

    bAND  shift, and go to state 49
    bOR   shift, and go to state 50
    ')'   shift, and go to state 51


state 38

   14 BExpr: RExpr .

    $default  reduce using rule 14 (BExpr)


state 39

   15 RExpr: Expr . '<' Expr
   16      | Expr . LTEQ Expr
   17      | Expr . EQ Expr
   18      | Expr . GTEQ Expr
   19      | Expr . '>' Expr
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    LTEQ  shift, and go to state 52
    EQ    shift, and go to state 53
    GTEQ  shift, and go to state 54
    '<'   shift, and go to state 55
    '>'   shift, and go to state 56
    '-'   shift, and go to state 31
    '+'   shift, and go to state 32


state 40

   10 Stmt: Id '=' Expr . ';'
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    ';'  shift, and go to state 57
    '-'  shift, and go to state 31
    '+'  shift, and go to state 32


state 41

   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term
   30 Factor: '(' Expr . ')'

    ')'  shift, and go to state 58
    '-'  shift, and go to state 31
    '+'  shift, and go to state 32


state 42

    9 Stmt: Write '(' Expr ')' . ';'
   30 Factor: '(' Expr ')' .

    ';'  shift, and go to state 59

    ';'       [reduce using rule 30 (Factor)]
    $default  reduce using rule 30 (Factor)


state 43

   20 Expr: Expr '-' Term .
   23 Term: Term . '%' Expo
   24     | Term . '/' Expo
   25     | Term . '*' Expo

    '%'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35

    $default  reduce using rule 20 (Expr)


state 44

   21 Expr: Expr '+' Term .
   23 Term: Term . '%' Expo
   24     | Term . '/' Expo
   25     | Term . '*' Expo

    '%'  shift, and go to state 33
    '/'  shift, and go to state 34
    '*'  shift, and go to state 35

    $default  reduce using rule 21 (Expr)


state 45

   23 Term: Term '%' Expo .
   27 Expo: Expo . '^' Factor

    '^'  shift, and go to state 36

    $default  reduce using rule 23 (Term)


state 46

   24 Term: Term '/' Expo .
   27 Expo: Expo . '^' Factor

    '^'  shift, and go to state 36

    $default  reduce using rule 24 (Term)


state 47

   25 Term: Term '*' Expo .
   27 Expo: Expo . '^' Factor

    '^'  shift, and go to state 36

    $default  reduce using rule 25 (Term)


state 48

   27 Expo: Expo '^' Factor .

    $default  reduce using rule 27 (Expo)


state 49

   12 BExpr: BExpr bAND . RExpr

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    RExpr   go to state 60
    Expr    go to state 39
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 50

   13 BExpr: BExpr bOR . RExpr

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    RExpr   go to state 61
    Expr    go to state 39
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 51

   11 Stmt: IF '(' BExpr ')' . '{' StmtSeq '}'

    '{'  shift, and go to state 62


state 52

   16 RExpr: Expr LTEQ . Expr

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 63
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 53

   17 RExpr: Expr EQ . Expr

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 64
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 54

   18 RExpr: Expr GTEQ . Expr

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 65
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 55

   15 RExpr: Expr '<' . Expr

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 66
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 56

   19 RExpr: Expr '>' . Expr

    Ident   shift, and go to state 15
    IntLit  shift, and go to state 16
    '('     shift, and go to state 27
    '-'     shift, and go to state 18

    Expr    go to state 67
    Term    go to state 20
    Expo    go to state 21
    Factor  go to state 22


state 57

   10 Stmt: Id '=' Expr ';' .

    $default  reduce using rule 10 (Stmt)


state 58

   30 Factor: '(' Expr ')' .

    $default  reduce using rule 30 (Factor)


state 59

    9 Stmt: Write '(' Expr ')' ';' .

    $default  reduce using rule 9 (Stmt)


state 60

   12 BExpr: BExpr bAND RExpr .

    $default  reduce using rule 12 (BExpr)


state 61

   13 BExpr: BExpr bOR RExpr .

    $default  reduce using rule 13 (BExpr)


state 62

   11 Stmt: IF '(' BExpr ')' '{' . StmtSeq '}'

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 68
    Stmt     go to state 11
    Id       go to state 12


state 63

   16 RExpr: Expr LTEQ Expr .
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32

    $default  reduce using rule 16 (RExpr)


state 64

   17 RExpr: Expr EQ Expr .
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32

    $default  reduce using rule 17 (RExpr)


state 65

   18 RExpr: Expr GTEQ Expr .
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32

    $default  reduce using rule 18 (RExpr)


state 66

   15 RExpr: Expr '<' Expr .
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32

    $default  reduce using rule 15 (RExpr)


state 67

   19 RExpr: Expr '>' Expr .
   20 Expr: Expr . '-' Term
   21     | Expr . '+' Term

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32

    $default  reduce using rule 19 (RExpr)


state 68

   11 Stmt: IF '(' BExpr ')' '{' StmtSeq . '}'

    '}'  shift, and go to state 69


state 69

   11 Stmt: IF '(' BExpr ')' '{' StmtSeq '}' .

    $default  reduce using rule 11 (Stmt)
